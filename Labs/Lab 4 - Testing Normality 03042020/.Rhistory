setwd("C:/Users/Marco Paggiaro/OneDrive/Desktop/mieidati/Applied Statistics/Labs/Lab 4 - 03042020")
install.packages(c("car", "mvnormtest"))
setwd("C:/Users/Marco Paggiaro/OneDrive/Desktop/mieidati/Applied Statistics/Labs/Lab 3 - 27032020")
age <- read.table('scotland.txt', header=T)
head(age)
dim(age)
x11()
pairs(age, pch=19)
matplot(t(age), type='l', xlab='Age', ylab='Number of Residents', lty=1, col=rainbow(33), las=1)
pairs(age, pch=19)
# scatterplots of two consecutive age ranges are very correlated.
matplot(t(age), type='l', xlab='Age', ylab='Number of Residents', lty=1, col=rainbow(33), las=1)
S <- cov(age)
image(S, asp=1)
S
var.gen <- det(S)
var.tot <- sum( diag(S) )
# PCA (on the covariance matrix)
pc.age <- princomp(age, scores=T)
pc.age
summary(pc.age)
# Explained variance
x11()
layout(matrix(c(2,3,1,3),2,byrow=T))
barplot(pc.age$sdev^2, las=2, main='Principal Components', ylab='Variances')
barplot(sapply(age,sd)^2, las=2, main='Original variables', ylab='Variances')
plot(cumsum(pc.age$sdev^2)/sum(pc.age$sde^2), type='b', axes=F, xlab='number of components', ylab='contribution to the total variance', ylim=c(0,1))
abline(h=1, col='blue')
abline(h=0.8, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:ncol(age),labels=1:ncol(age),las=2)
# Scores
scores.age <- pc.age$scores
scores.age
layout(matrix(c(1,2),2))
boxplot(age, las=2, col='gold', main='Original variables')
scores.age <- data.frame(scores.age)
boxplot(scores.age, las=2, col='gold', main='Principal components')
# loadings are useful to interpret the PCs:
load.age    <- pc.age$loadings
load.age
x11()
par(mar = c(1,4,0,2), mfrow = c(3,1))
for(i in 1:3)barplot(load.age[,i], ylim = c(-1, 1))
x11()
plot(scores.age[,1],scores.age[,2],type="n",xlab="pc1",ylab="pc2", asp=1)
text(scores.age[,1],scores.age[,2],dimnames(age)[[1]], cex=0.7)
biplot(pc.age)
plot(scores.age[,1],scores.age[,2],type="n",xlab="pc1",ylab="pc2", asp=1)
text(scores.age[,1],scores.age[,2],dimnames(age)[[1]], cex=0.7)
# Projection on the space generated by the k-th principal component
x11(width=18, height=7)
par(mfrow=c(2,3))
#matplot(t(age), type='l', main = 'Data', ylim=range(age))
meanA <- colMeans(age)
matplot(meanA, type='l', main = '0 PC', lwd=2, ylim=range(age))
for(i in 1:5)
{
projection <- matrix(meanA, dim(age)[[1]], dim(age)[[2]], byrow=T) + scores.age[,i] %*% t(load.age[,i])
matplot(t(projection), type='l', main = paste(i, 'PC'), ylim=range(age))
matplot(meanA, type='l', lwd=2, add=T)
}
setwd("C:/Users/Marco Paggiaro/OneDrive/Desktop/mieidati/Applied Statistics/Labs/Lab 4 - 03042020")
library(mvtnorm)
library(mvnormtest)
mu <- c(1,2)
mu
sig <- matrix(c(1,1,1,2), 2)
sig
n   <-  150
set.seed(20200403)
X <- rmvnorm(n, mu, sig)
x.1 <- seq(-4,6,0.15); x.2 <- seq(-4,8,0.15)
w <- matrix(NA, length(x.1), length(x.2))
for(i in 1:length(x.1)){
for(j in 1:length(x.2)){
w[i,j] <- dmvnorm(c(x.1[i],x.2[j]),mu,sig)
}
}
x11()
image(x.1, x.2, w,asp=1, ylim=c(-4,8), main="Sample points")
x11()
par(mfrow=c(2,2))
hist(X[,1], prob=T, ylab='density', xlab='X.1', main='Histogram of X.1',ylim=c(0,0.45))
lines((-1000):1000 /100, dnorm((-1000):1000 /100,mean(X[,1]),sd(X[,1])), col='blue', lty=2)
hist(X[,2], prob=T, ylab='density', xlab='X.2', main='Histogram of X.2',ylim=c(0,0.45))
lines((-1000):1000 /100, dnorm((-1000):1000 /100,mean(X[,2]),sd(X[,2])), col='blue', lty=2)
qqnorm(X[,1], main='QQplot of X.1',xlab='theoretical quantiles', ylab='sample quantiles')
qqline(X[,1])
qqnorm(X[,2], main='QQplot of X.2',xlab='theoretical quantiles', ylab='sample quantiles')
qqline(X[,2])
shapiro.test(X[,1])
shapiro.test(X[,2])
# we look at the directions of the PCs
pc.X <- princomp(X,scores=T)
x11()
x11()
par(mfrow=c(2,2))
hist(pc.X$scores[,1], prob=T, ylab='density', xlab='comp.1', main='Histogram of PC1',ylim=c(0,0.41))
lines((-1000):1000 /100, dnorm((-1000):1000 /100,mean(pc.X$scores[,1]),sd(pc.X$scores[,1])), col='blue', lty=2)
hist(pc.X$scores[,2], prob=T, ylab='density', xlab='comp.2', main='Histogram of PC2',ylim=c(0,0.7))
lines((-1000):1000 /100, dnorm((-1000):1000 /100,mean(pc.X$scores[,2]),sd(pc.X$scores[,2])), col='blue', lty=2)
qqnorm(pc.X$scores[,1], main='QQplot of PC1',xlab='theoretical quantiles', ylab='sample quantiles')
qqline(pc.X$scores[,1])
qqnorm(pc.X$scores[,2], main='QQplot of PC2',xlab='theoretical quantiles', ylab='sample quantiles')
qqline(pc.X$scores[,2])
shapiro.test(pc.X$scores[,1])
shapiro.test(pc.X$scores[,2])
x11()
plot(X, asp=1,xlab='X.1',ylab='X.2')
library(car)
for(prob in (1:14)/15)
dataEllipse(X, levels = prob , add=T)
d2 <- mahalanobis(X, colMeans(X), cov(X))
x11(width=13)
par(mfrow=c(1,2))
hist(d2, prob=T, main='Histogram of the Mahalanobis dist.',xlab='d2',ylab='density', col='grey84')
lines(0:2000/100, dchisq(0:2000/100,2), col='blue', lty=2, lwd=2)
qqplot(qchisq((1:n - 0.5)/n, df = 2), d2, main='QQplot of (sample) d2',xlab='theoretical quantiles Chi-sq(2)',
ylab='sample quantiles')
abline(0, 1)
d2.class <- cut(d2, qchisq((0:10)/10, df = 2))
d2.freq  <- table(d2.class)
chisq.test(x = d2.freq, p = rep(1/10, 10), simulate.p.value = T)
graphics.off()
stiff <- read.table('stiff.dat')
stiff
x11()
plot(stiff, asp=1, pch=19)
x11(width=12)
par(mfcol=c(2,4))
for(i in 1:4)
{
hist(stiff[,i], prob=T, main=paste('Histogram of V', i, sep=''), xlab=paste('V', i, sep=''))
lines(900:2800, dnorm(900:2800,mean(stiff[,i]),sd(stiff[,i])), col='blue', lty=2)
qqnorm(stiff[,i], main=paste('QQplot of V', i, sep=''))
qqline(stiff[,i])
print(shapiro.test(stiff[,i])$p)
}
# Normality of the principal components
PCs <- data.frame(princomp(stiff)$scores)
x11()
plot(PCs, asp=1, pch=19)
x11(width=13)
par(mfcol=c(2,4))
for(i in 1:4)
{
hist(PCs[,i], prob=T, main=paste('Histogram of PC', i, sep=''))
lines(seq(min(PCs[,i]), max(PCs[,i]), length=2000), dnorm(seq(min(PCs[,i]), max(PCs[,i]), length=2000),mean(PCs[,i]),sd(PCs[,i])), col='blue', lty=2)
qqnorm(PCs[,i], main=paste('QQplot of PC', i, sep=''))
qqline(PCs[,i])
print(shapiro.test(PCs[,i])$p)
}
M <- colMeans(stiff)
S <- cov(stiff)
d2 <- matrix(mahalanobis(stiff, M, S))
windows()
par(mfrow=c(1,2))
hist(d2, prob=T)
lines(0:2000/100, dchisq(0:2000/100,4), col='blue', lty=2)
qqplot(qchisq(seq(0.5/30, 1 - 0.5/30 ,by = 1/30), df = 4), d2,  main='QQplot di d2')
abline(0, 1)
d2.class <- cut(d2, qchisq((0:6)/6, df = 3))
d2.freq  <- table(d2.class)
chisq.test(x = d2.freq, p = rep(1/6, 6), simulate.p.value = T)
# test of all the directions simultaneously
mcshapiro.test(stiff)
mcshapiro.test <- function(X, devstmax = 0.01, sim = ceiling(1/(4*devstmax^2)))
{
library(mvnormtest)
n   <- dim(X)[1]
p   <- dim(X)[2]
mu  <- rep(0,p)
sig <- diag(p)
W   <- NULL
for(i in 1:sim)
{
Xsim <- rmvnorm(n, mu, sig)
W   <- c(W, mshapiro.test(t(Xsim))$stat)
# mshapiro.test(X): compute the statistics min(W) for the sample X
}
Wmin   <- mshapiro.test(t(X))$stat   # min(W) for the given sample
pvalue <- sum(W < Wmin)/sim          # proportion of min(W) more extreme than the observed Wmin
devst  <- sqrt(pvalue*(1-pvalue)/sim)
list(Wmin = as.vector(Wmin), pvalue = pvalue, devst = devst, sim = sim)
}
# test of all the directions simultaneously
mcshapiro.test(stiff)
x11()
plot(d2, pch=ifelse(d2<7.5,1,19))
x11()
plot(stiff, pch=ifelse(d2<7.5,1,19))
stiff.noout <- stiff[which(d2<7.5),]
mcshapiro.test(stiff.noout)
